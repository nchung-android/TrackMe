plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
}
def cfg = rootProject.ext

android {
    def javaVersion = JavaVersion.VERSION_1_8

    compileSdkVersion cfg.compileSdkVersion
    buildToolsVersion cfg.buildToolsVersion

    defaultConfig {
        applicationId "com.nchungdev.trackme"
        minSdkVersion cfg.minSdkVersion
        targetSdkVersion cfg.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //Read the API key from ./secure.properties into R.string.maps_api_key
        def secureProps = new Properties()
        if (file("../secure.properties").exists()) {
            file("../secure.properties")?.withInputStream { secureProps.load(it) }
        }
        resValue "string", "maps_api_key", (secureProps.getProperty("MAPS_API_KEY") ?: "")
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility javaVersion
        targetCompatibility javaVersion
    }
    kotlinOptions {
        jvmTarget = javaVersion.toString()
    }
    buildFeatures {
        viewBinding true
    }

}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "androidx.core:core-ktx:$core_ktx"
    implementation "androidx.appcompat:appcompat:$androix"
    implementation "com.google.android.material:material:$material"
    implementation "androidx.constraintlayout:constraintlayout:$constraintlayout"
    testImplementation "junit:junit:$junit"
    androidTestImplementation "androidx.test.ext:junit:$android_junit"
    androidTestImplementation "androidx.test.espresso:espresso-core:$espresso_core"

    api project(path: ':data')

    // Room
    implementation "androidx.room:room-runtime:$room_runtime"
    kapt "androidx.room:room-compiler:$room_runtime"

    // Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_runtime"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:$coroutines_version"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutines_version"

    // Coroutine Lifecycle Scopes
    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // Annotation processor
    kapt "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    annotationProcessor "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation "android.arch.lifecycle:extensions:$lifecycle_ext"

    // Navigation Components
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_fragment_ktx"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_fragment_ktx"

    // Glide
    implementation "com.github.bumptech.glide:glide:$glide"
    kapt "com.github.bumptech.glide:compiler:$glide"

    // Google Maps Location Services
    implementation "com.google.android.gms:play-services-location:$play_services_location"
    implementation "com.google.android.gms:play-services-maps:$play_services_maps"

    // Dagger Core
    implementation "com.google.dagger:dagger:$dagger"
    kapt "com.google.dagger:dagger-compiler:$dagger"

//    // Dagger Android
    implementation "com.google.dagger:dagger-android:$dagger"
    implementation "com.google.dagger:dagger-android-support:$dagger"
    kapt "com.google.dagger:dagger-android-processor:$dagger"

    // Timber
    implementation "com.jakewharton.timber:timber:$timber"

}